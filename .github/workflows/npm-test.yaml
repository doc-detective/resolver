# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Test (& Publish)

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 5
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node:
          - 18
          - 20
          - 22
          - 24

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: package-lock.json
          registry-url: https://registry.npmjs.org/

      - run: npm ci
      - run: npm test

  publish-npm:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: package-lock.json
          registry-url: https://registry.npmjs.org/

      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  update-downstream:
    name: Update downstream packages
    needs: publish-npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get package version
        id: get_version
        run: |
          # Extract the version from package.json and set it as an environment variable
          echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Update `core`
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.DD_DEP_UPDATE_TOKEN }}" \
                -H "Accept: application/vnd.github.everest-preview+json" \
                "https://api.github.com/repos/doc-detective/core/dispatches" \
                -d '{"event_type": "update-resolver-package-event", "client_payload": {"version": "${{ steps.get_version.outputs.version }}"} }'

      - name: Update VSCode extension
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.DD_DEP_UPDATE_TOKEN }}" \
               -H "Accept: application/vnd.github.everest-preview+json" \
               "https://api.github.com/repos/doc-detective/vscode/dispatches" \
               -d '{"event_type": "update-resolver-package-event", "client_payload": {"version": "${{ steps.get_version.outputs.version }}"} }'
