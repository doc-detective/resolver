{
  "config": {
    "input": [
      "/home/hawkeyexl/Workspaces/resolver/dev/dev.spec.json"
    ],
    "integrations": {
      "openApi": [
        {
          "name": "reqres",
          "descriptionPath": "/home/hawkeyexl/Workspaces/resolver/dev/reqres.openapi.json",
          "validateAgainstSchema": "both",
          "useExample": "none",
          "exampleKey": "",
          "definition": {
            "openapi": "3.0.3",
            "info": {
              "title": "Reqres API",
              "description": "Sample API for testing and prototyping",
              "version": "0.0.1"
            },
            "servers": [
              {
                "url": "https://reqres.in/api"
              }
            ],
            "tags": [
              {
                "name": "Test",
                "description": "Test operations"
              }
            ],
            "security": [
              {}
            ],
            "paths": {
              "/users": {
                "post": {
                  "tags": [
                    "Test"
                  ],
                  "summary": "Add a new user",
                  "description": "Add a new user",
                  "operationId": "addUser",
                  "requestBody": {
                    "description": "Create a new user",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "job": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "201": {
                      "description": "Successful operation",
                      "content": {
                        "application/json": {
                          "schema": {
                            "description": "response payload"
                          },
                          "examples": {
                            "test": {
                              "value": {
                                "name": "morpheus",
                                "job": "leader"
                              }
                            },
                            "foobar": {
                              "value": {
                                "name": "neo",
                                "job": "the-one"
                              }
                            }
                          }
                        }
                      }
                    },
                    "400": {
                      "description": "Invalid input",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "get": {
                  "tags": [
                    "Test"
                  ],
                  "summary": "Return a list of users",
                  "description": "Return a list of users",
                  "operationId": "getUsers",
                  "parameters": [
                    {
                      "name": "page",
                      "in": "query",
                      "description": "Select the portition of record you want back",
                      "required": false,
                      "schema": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "successful operation",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "array",
                            "items": {
                              "description": "response payload"
                            }
                          }
                        }
                      }
                    },
                    "400": {
                      "description": "Invalid input",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "/users/{id}": {
                "put": {
                  "tags": [
                    "Test"
                  ],
                  "summary": "Update an existing user",
                  "description": "Update an existing user by Id",
                  "operationId": "updateUser",
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "description": "id of user to delete",
                      "required": true,
                      "example": 1,
                      "schema": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  ],
                  "requestBody": {
                    "description": "Update an existent pet in the store",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "job": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "Successful operation",
                      "content": {
                        "application/json": {
                          "schema": {
                            "description": "response payload"
                          }
                        }
                      }
                    },
                    "400": {
                      "description": "Invalid input",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "delete": {
                  "tags": [
                    "Test"
                  ],
                  "summary": "Deletes a user",
                  "description": "delete a user",
                  "operationId": "deleteUser",
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "description": "id of user to delete",
                      "required": true,
                      "example": 1,
                      "schema": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  ],
                  "responses": {
                    "204": {
                      "description": "No content"
                    },
                    "400": {
                      "description": "Invalid input",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "components": {
              "schemas": {
                "userResponse": {
                  "description": "response payload"
                },
                "userRequest": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "job": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "logLevel": "debug",
    "output": ".",
    "recursive": true,
    "relativePathBase": "file",
    "detectSteps": true,
    "fileTypes": [
      {
        "name": "markdown",
        "extensions": [
          "md",
          "markdown",
          "mdx"
        ],
        "inlineStatements": {
          "testStart": [
            "{\\/\\*\\s*test\\s+?([\\s\\S]*?)\\s*\\*\\/}",
            "<!--\\s*test\\s*([\\s\\S]*?)\\s*-->",
            "\\[comment\\]:\\s+#\\s+\\(test\\s*(.*?)\\s*\\)",
            "\\[comment\\]:\\s+#\\s+\\(test start\\s*(.*?)\\s*\\)"
          ],
          "testEnd": [
            "{\\/\\*\\s*test end\\s*\\*\\/}",
            "<!--\\s*test end\\s*([\\s\\S]*?)\\s*-->",
            "\\[comment\\]:\\s+#\\s+\\(test end\\)"
          ],
          "ignoreStart": [
            "{\\/\\*\\s*test ignore start\\s*\\*\\/}",
            "<!--\\s*test ignore start\\s*-->"
          ],
          "ignoreEnd": [
            "{\\/\\*\\s*test ignore end\\s*\\*\\/}",
            "<!--\\s*test ignore end\\s*-->"
          ],
          "step": [
            "{\\/\\*\\s*step\\s+?([\\s\\S]*?)\\s*\\*\\/}",
            "<!--\\s*step\\s*([\\s\\S]*?)\\s*-->",
            "\\[comment\\]:\\s+#\\s+\\(step\\s*(.*?)\\s*\\)"
          ]
        },
        "markup": [
          {
            "name": "checkHyperlink",
            "regex": [
              "(?<!\\!)\\[[^\\]]+\\]\\(\\s*(https?:\\/\\/[^\\s)]+)(?:\\s+\"[^\"]*\")?\\s*\\)"
            ],
            "actions": [
              "checkLink"
            ]
          },
          {
            "name": "clickOnscreenText",
            "regex": [
              "\\b(?:[Cc]lick|[Tt]ap|[Ll]eft-click|[Cc]hoose|[Ss]elect|[Cc]heck)\\b\\s+\\*\\*((?:(?!\\*\\*).)+)\\*\\*"
            ],
            "actions": [
              "click"
            ]
          },
          {
            "name": "findOnscreenText",
            "regex": [
              "\\*\\*((?:(?!\\*\\*).)+)\\*\\*"
            ],
            "actions": [
              "find"
            ]
          },
          {
            "name": "goToUrl",
            "regex": [
              "\\b(?:[Gg]o\\s+to|[Oo]pen|[Nn]avigate\\s+to|[Vv]isit|[Aa]ccess|[Pp]roceed\\s+to|[Ll]aunch)\\b\\s+\\[[^\\]]+\\]\\(\\s*(https?:\\/\\/[^\\s)]+)(?:\\s+\"[^\"]*\")?\\s*\\)"
            ],
            "actions": [
              "goTo"
            ]
          },
          {
            "name": "screenshotImage",
            "regex": [
              "!\\[[^\\]]*\\]\\(\\s*([^\\s)]+)(?:\\s+\"[^\"]*\")?\\s*\\)\\s*\\{(?=[^}]*\\.screenshot)[^}]*\\}"
            ],
            "actions": [
              "screenshot"
            ]
          },
          {
            "name": "typeText",
            "regex": [
              "\\b(?:press|enter|type)\\b\\s+\"([^\"]+)\""
            ],
            "actions": [
              "type"
            ]
          }
        ]
      },
      {
        "name": "asciidoc",
        "extensions": [
          "adoc",
          "asciidoc",
          "asc"
        ],
        "inlineStatements": {
          "testStart": [
            "\\/\\/\\s+\\(\\s*test\\s+([\\s\\S]*?)\\s*\\)"
          ],
          "testEnd": [
            "\\/\\/\\s+\\(\\s*test end\\s*\\)"
          ],
          "ignoreStart": [
            "\\/\\/\\s+\\(\\s*test ignore start\\s*\\)"
          ],
          "ignoreEnd": [
            "\\/\\/\\s+\\(\\s*test ignore end\\s*\\)"
          ],
          "step": [
            "\\/\\/\\s+\\(\\s*step\\s+([\\s\\S]*?)\\s*\\)"
          ]
        },
        "markup": []
      },
      {
        "name": "html",
        "extensions": [
          "html",
          "htm"
        ],
        "inlineStatements": {
          "testStart": [
            "<!--\\s*test\\s+?([\\s\\S]*?)\\s*-->"
          ],
          "testEnd": [
            "<!--\\s*test end\\s*([\\s\\S]*?)\\s*-->"
          ],
          "ignoreStart": [
            "<!--\\s*test ignore start\\s*-->"
          ],
          "ignoreEnd": [
            "<!--\\s*test ignore end\\s*-->"
          ],
          "step": [
            "<!--\\s*step\\s+?([\\s\\S]*?)\\s*-->"
          ]
        },
        "markup": []
      }
    ],
    "telemetry": {
      "send": true
    },
    "configId": "343eeb23-6a45-496f-84ef-6210be7e10c7",
    "environment": {
      "arch": "x64",
      "platform": "linux",
      "workingDirectory": "/home/hawkeyexl/Workspaces/resolver"
    }
  },
  "specs": [
    {
      "tests": [
        {
          "after": "/home/hawkeyexl/Workspaces/resolver/dev/cleanup.spec.json",
          "testId": "17e04f88-1c54-447f-ab6b-1d3a38ef1033",
          "runOn": [],
          "openApi": [
            {
              "name": "reqres",
              "descriptionPath": "/home/hawkeyexl/Workspaces/resolver/dev/reqres.openapi.json",
              "validateAgainstSchema": "both",
              "useExample": "none",
              "exampleKey": "",
              "definition": {
                "openapi": "3.0.3",
                "info": {
                  "title": "Reqres API",
                  "description": "Sample API for testing and prototyping",
                  "version": "0.0.1"
                },
                "servers": [
                  {
                    "url": "https://reqres.in/api"
                  }
                ],
                "tags": [
                  {
                    "name": "Test",
                    "description": "Test operations"
                  }
                ],
                "security": [
                  {}
                ],
                "paths": {
                  "/users": {
                    "post": {
                      "tags": [
                        "Test"
                      ],
                      "summary": "Add a new user",
                      "description": "Add a new user",
                      "operationId": "addUser",
                      "requestBody": {
                        "description": "Create a new user",
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "job": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "required": true
                      },
                      "responses": {
                        "201": {
                          "description": "Successful operation",
                          "content": {
                            "application/json": {
                              "schema": {
                                "description": "response payload"
                              },
                              "examples": {
                                "test": {
                                  "value": {
                                    "name": "morpheus",
                                    "job": "leader"
                                  }
                                },
                                "foobar": {
                                  "value": {
                                    "name": "neo",
                                    "job": "the-one"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "400": {
                          "description": "Invalid input",
                          "content": {
                            "application/json": {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "error": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "get": {
                      "tags": [
                        "Test"
                      ],
                      "summary": "Return a list of users",
                      "description": "Return a list of users",
                      "operationId": "getUsers",
                      "parameters": [
                        {
                          "name": "page",
                          "in": "query",
                          "description": "Select the portition of record you want back",
                          "required": false,
                          "schema": {
                            "type": "integer",
                            "example": 1
                          }
                        }
                      ],
                      "responses": {
                        "200": {
                          "description": "successful operation",
                          "content": {
                            "application/json": {
                              "schema": {
                                "type": "array",
                                "items": {
                                  "description": "response payload"
                                }
                              }
                            }
                          }
                        },
                        "400": {
                          "description": "Invalid input",
                          "content": {
                            "application/json": {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "error": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "/users/{id}": {
                    "put": {
                      "tags": [
                        "Test"
                      ],
                      "summary": "Update an existing user",
                      "description": "Update an existing user by Id",
                      "operationId": "updateUser",
                      "parameters": [
                        {
                          "name": "id",
                          "in": "path",
                          "description": "id of user to delete",
                          "required": true,
                          "example": 1,
                          "schema": {
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      ],
                      "requestBody": {
                        "description": "Update an existent pet in the store",
                        "content": {
                          "application/json": {
                            "schema": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "job": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "required": true
                      },
                      "responses": {
                        "200": {
                          "description": "Successful operation",
                          "content": {
                            "application/json": {
                              "schema": {
                                "description": "response payload"
                              }
                            }
                          }
                        },
                        "400": {
                          "description": "Invalid input",
                          "content": {
                            "application/json": {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "error": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "delete": {
                      "tags": [
                        "Test"
                      ],
                      "summary": "Deletes a user",
                      "description": "delete a user",
                      "operationId": "deleteUser",
                      "parameters": [
                        {
                          "name": "id",
                          "in": "path",
                          "description": "id of user to delete",
                          "required": true,
                          "example": 1,
                          "schema": {
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      ],
                      "responses": {
                        "204": {
                          "description": "No content"
                        },
                        "400": {
                          "description": "Invalid input",
                          "content": {
                            "application/json": {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "error": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "components": {
                  "schemas": {
                    "userResponse": {
                      "description": "response payload"
                    },
                    "userRequest": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "job": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "contexts": [
            {
              "openApi": [],
              "steps": [
                {
                  "goTo": "https://duckduckgo.com"
                },
                {
                  "find": "/Set As.+/"
                },
                {
                  "runShell": "echo cleanup"
                }
              ],
              "contextId": "e7c3c74c-315a-453e-86c8-537171c1ff72"
            }
          ]
        }
      ],
      "specId": "722226ef-bc40-4e98-8ddf-c7c0da8b377f",
      "runOn": [],
      "openApi": [
        {
          "name": "reqres",
          "descriptionPath": "/home/hawkeyexl/Workspaces/resolver/dev/reqres.openapi.json",
          "validateAgainstSchema": "both",
          "useExample": "none",
          "exampleKey": "",
          "definition": {
            "openapi": "3.0.3",
            "info": {
              "title": "Reqres API",
              "description": "Sample API for testing and prototyping",
              "version": "0.0.1"
            },
            "servers": [
              {
                "url": "https://reqres.in/api"
              }
            ],
            "tags": [
              {
                "name": "Test",
                "description": "Test operations"
              }
            ],
            "security": [
              {}
            ],
            "paths": {
              "/users": {
                "post": {
                  "tags": [
                    "Test"
                  ],
                  "summary": "Add a new user",
                  "description": "Add a new user",
                  "operationId": "addUser",
                  "requestBody": {
                    "description": "Create a new user",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "job": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "201": {
                      "description": "Successful operation",
                      "content": {
                        "application/json": {
                          "schema": {
                            "description": "response payload"
                          },
                          "examples": {
                            "test": {
                              "value": {
                                "name": "morpheus",
                                "job": "leader"
                              }
                            },
                            "foobar": {
                              "value": {
                                "name": "neo",
                                "job": "the-one"
                              }
                            }
                          }
                        }
                      }
                    },
                    "400": {
                      "description": "Invalid input",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "get": {
                  "tags": [
                    "Test"
                  ],
                  "summary": "Return a list of users",
                  "description": "Return a list of users",
                  "operationId": "getUsers",
                  "parameters": [
                    {
                      "name": "page",
                      "in": "query",
                      "description": "Select the portition of record you want back",
                      "required": false,
                      "schema": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "successful operation",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "array",
                            "items": {
                              "description": "response payload"
                            }
                          }
                        }
                      }
                    },
                    "400": {
                      "description": "Invalid input",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "/users/{id}": {
                "put": {
                  "tags": [
                    "Test"
                  ],
                  "summary": "Update an existing user",
                  "description": "Update an existing user by Id",
                  "operationId": "updateUser",
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "description": "id of user to delete",
                      "required": true,
                      "example": 1,
                      "schema": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  ],
                  "requestBody": {
                    "description": "Update an existent pet in the store",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "job": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "Successful operation",
                      "content": {
                        "application/json": {
                          "schema": {
                            "description": "response payload"
                          }
                        }
                      }
                    },
                    "400": {
                      "description": "Invalid input",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "delete": {
                  "tags": [
                    "Test"
                  ],
                  "summary": "Deletes a user",
                  "description": "delete a user",
                  "operationId": "deleteUser",
                  "parameters": [
                    {
                      "name": "id",
                      "in": "path",
                      "description": "id of user to delete",
                      "required": true,
                      "example": 1,
                      "schema": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  ],
                  "responses": {
                    "204": {
                      "description": "No content"
                    },
                    "400": {
                      "description": "Invalid input",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "components": {
              "schemas": {
                "userResponse": {
                  "description": "response payload"
                },
                "userRequest": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "job": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  ]
}